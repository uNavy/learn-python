# PYTHON DATA TYPES
# PYTHON HAS MANY DATA TYPES, INCLUDING BUILT-IN TYPES AND CUSTOM TYPES.
# THIS CHAPTER PROVIDES A HIGH-LEVEL OVERVIEW OF THESE TYPES.

# NUMERIC DATA TYPES
# THERE ARE AT LEAST THREE NUMERIC DATA TYPES IN PYTHON:

# INTEGER - STORES WHOLE NUMBERS
number_1 = 10000024

# FLOAT - STORES DECIMAL OR FLOATING-POINT NUMBERS
number_2 = 3.14

# COMPLEX - STORES A COMBINATION OF REAL AND IMAGINARY NUMBERS
number_3 = 120 + 3j

# STRING DATA TYPE
# THE STRING DATA TYPE IS REPRESENTED BY "str".
# STRINGS CAN BE CREATED USING DOUBLE QUOTES OR SINGLE QUOTES.

# SINGLE-LINE STRING USING DOUBLE QUOTES
string_1 = "hello python"

# MULTI-LINE STRING USING TRIPLE DOUBLE QUOTES
string_2 = """Hello
Python"""

# SINGLE-LINE STRING USING SINGLE QUOTES
string_3 = 'for the horde!'

# MULTI-LINE STRING USING TRIPLE SINGLE QUOTES
string_4 = '''
Hello
Python
'''

# BOOLEAN DATA TYPE
# BOOLEAN VALUES IN PYTHON ARE REPRESENTED AS True AND False
bool_1 = True
bool_2 = False

# NONE DATA TYPE
# "None" REPRESENTS AN EMPTY VALUE (SIMILAR TO NULL IN OTHER LANGUAGES)
data = "hello"
print(data)  # OUTPUT: HELLO

data = None
print(data)  # OUTPUT: None

# LIST DATA TYPE
# A LIST IS A COLLECTION OF VALUES STORED IN SEQUENCE.
# IT CAN CONTAIN ELEMENTS OF DIFFERENT DATA TYPES.

# LIST OF INTEGERS
list_1 = [2, 4, 8, 16]

# LIST OF STRINGS
list_2 = ["grayson", "jason", "tim", "damian"]

# LIST WITH MIXED DATA TYPES
list_3 = [24, False, "Hello Python"]

# ACCESSING LIST ELEMENTS USING INDEXING
print(list_1[2])  # OUTPUT: 8

# TUPLE DATA TYPE
# A TUPLE IS SIMILAR TO A LIST BUT IMMUTABLE (CANNOT BE MODIFIED AFTER CREATION).
# IT IS ENCLOSED IN PARENTHESES "()" INSTEAD OF SQUARE BRACKETS "[]".

# TUPLE OF INTEGERS
tuple_1 = (2, 3, 4)

# TUPLE OF STRINGS
tuple_2 = ("numenor", "valinor")

# TUPLE WITH MIXED DATA TYPES
tuple_3 = (24, False, "Hello Python")

# ACCESSING TUPLE ELEMENTS USING INDEXING
print(tuple_1[2])  # OUTPUT: 4

# DICTIONARY DATA TYPE
# A DICTIONARY STORES DATA IN KEY-VALUE PAIRS.

profile_1 = {
    "name": "Noval",
    "is_male": False,
    "age": 16,
    "hobbies": ["gaming", "learning"]
}

# ACCESSING DICTIONARY VALUES
print("name: %s" % (profile_1["name"]))  # OUTPUT: NAME: NOVAL
print("hobbies: %s" % (profile_1["hobbies"]))  # OUTPUT: HOBBIES: ["GAMING", "LEARNING"]

# SET DATA TYPE
# A SET IS A COLLECTION OF UNIQUE ELEMENTS.
# ELEMENTS IN A SET CANNOT BE MODIFIED BUT CAN BE REMOVED.
# SETS DO NOT MAINTAIN ORDER AND CANNOT BE ACCESSED USING AN INDEX.

set_1 = {"pineapple", "spaghetti"}
print(set_1)  # OUTPUT: {'PINEAPPLE', 'SPAGHETTI'}

# OTHER DATA TYPES
# ADDITIONAL DATA TYPES IN PYTHON INCLUDE:
# - frozenset
# - bytes
# - memoryview
# - range
# THESE WILL BE DISCUSSED IN SEPARATE CHAPTERS.
